hist(coeff_mcar_record)
mean(coeff_mcar_record)
abline(mod$coefficients[2])
mod$coefficients[2]
hist(coeff_mcar_record)
abline(v=mod$coefficients[2])
mod$coefficients[1]
hist(intercept_mnar_record)
mean(intercept_mnar_record)
abline(v=mod$coefficients[1])
## non-relational, typical LogReg setting
rm(list=ls())
n_F <- 10000
n_M <- 10000
height_F <- rnorm(n_F, mean = 120, sd = 10)
height_M <- rnorm(n_M, mean=150, sd = 5)
hist(c(height_F,height_M))
y <- c(rep(0,n_F), rep(1,n_M))
x <- c(height_F, height_M)
mod <- glm(y~x, family='binomial')
summary(mod)
mod$coefficients
intercept_mcar_record <- c()
coeff_mcar_record <- c()
intercept_mnar_record <- c()
coeff_mnar_record <- c()
for(j in 1:1000){
## sample MCAR
idx_mcar <- sample(n_F + n_M, size = (0.5+0.85)/2 * (n_F + n_M))
mod_mcar <- glm(y[idx_mcar]~x[idx_mcar], family='binomial')
mod_mcar$coefficients
intercept_mcar_record <-c(intercept_mcar_record,mod_mcar$coefficients[1])
coeff_mcar_record <-c(coeff_mcar_record,mod_mcar$coefficients[2])
## sample MNAR
idx_mnar_F <- sample(n_F , size = 0.5 *n_F)
idx_mnar_M <- sample(n_M , size = 0.85 *n_M)
y_F <- rep(0,n_F)[idx_mnar_F]
y_M <- rep(1,n_M)[idx_mnar_M]
x_F <- height_F[idx_mnar_F]
x_M <- height_M[idx_mnar_M]
y_mnar <- c(y_F, y_M)
x_mnar <- c(x_F, x_M)
mod_mnar <- glm(y_mnar~x_mnar, family='binomial')
intercept_mnar_record <- c(intercept_mnar_record,mod_mnar$coefficients[1])
coeff_mnar_record <-c(coeff_mnar_record,mod_mnar$coefficients[2])
}
mod$coefficients[1]
hist(intercept_mcar_record)
abline(v=mod$coefficients[1])
mean(intercept_mcar_record)
mod$coefficients[2]
hist(coeff_mcar_record)
abline(v=mod$coefficients[2])
mean(coeff_mcar_record)
mod$coefficients[1]
hist(intercept_mnar_record)
abline(v=mod$coefficients[1])
mean(intercept_mnar_record)
mod$coefficients[2]
hist(coeff_mnar_record)
mean(coeff_mnar_record)
coeff_mnar_record
warnings()
## non-relational, typical LogReg setting
rm(list=ls())
n_F <- 10000
n_M <- 10000
height_F <- rnorm(n_F, mean = 120, sd = 10)
height_M <- rnorm(n_M, mean=130, sd = 10)
hist(c(height_F,height_M))
y <- c(rep(0,n_F), rep(1,n_M))
x <- c(height_F, height_M)
mod <- glm(y~x, family='binomial')
summary(mod)
mod$coefficients
## non-relational, typical LogReg setting
rm(list=ls())
n_F <- 10000
n_M <- 10000
height_F <- rnorm(n_F, mean = 120, sd = 5)
height_M <- rnorm(n_M, mean=130, sd = 5)
hist(c(height_F,height_M))
y <- c(rep(0,n_F), rep(1,n_M))
x <- c(height_F, height_M)
mod <- glm(y~x, family='binomial')
summary(mod)
mod$coefficients
## non-relational, typical LogReg setting
rm(list=ls())
n_F <- 10000
n_M <- 10000
height_F <- rnorm(n_F, mean = 120, sd = 3)
height_M <- rnorm(n_M, mean=130, sd = 3)
hist(c(height_F,height_M))
y <- c(rep(0,n_F), rep(1,n_M))
x <- c(height_F, height_M)
mod <- glm(y~x, family='binomial')
summary(mod)
mod$coefficients
## non-relational, typical LogReg setting
rm(list=ls())
n_F <- 10000
n_M <- 10000
height_F <- rnorm(n_F, mean = 120, sd = 3)
height_M <- rnorm(n_M, mean=130, sd = 3)
hist(c(height_F,height_M))
y <- c(rep(0,n_F), rep(1,n_M))
x <- c(height_F, height_M)
mod <- glm(y~x, family='binomial')
summary(mod)
mod$coefficients
intercept_mcar_record <- c()
coeff_mcar_record <- c()
intercept_mnar_record <- c()
coeff_mnar_record <- c()
for(j in 1:10){
## sample MCAR
idx_mcar <- sample(n_F + n_M, size = (0.5+0.85)/2 * (n_F + n_M))
mod_mcar <- glm(y[idx_mcar]~x[idx_mcar], family='binomial')
mod_mcar$coefficients
intercept_mcar_record <-c(intercept_mcar_record,mod_mcar$coefficients[1])
coeff_mcar_record <-c(coeff_mcar_record,mod_mcar$coefficients[2])
## sample MNAR
idx_mnar_F <- sample(n_F , size = 0.5 *n_F)
idx_mnar_M <- sample(n_M , size = 0.85 *n_M)
y_F <- rep(0,n_F)[idx_mnar_F]
y_M <- rep(1,n_M)[idx_mnar_M]
x_F <- height_F[idx_mnar_F]
x_M <- height_M[idx_mnar_M]
y_mnar <- c(y_F, y_M)
x_mnar <- c(x_F, x_M)
mod_mnar <- glm(y_mnar~x_mnar, family='binomial')
intercept_mnar_record <- c(intercept_mnar_record,mod_mnar$coefficients[1])
coeff_mnar_record <-c(coeff_mnar_record,mod_mnar$coefficients[2])
}
## non-relational, typical LogReg setting
rm(list=ls())
n_F <- 10000
n_M <- 10000
height_F <- rnorm(n_F, mean = 120, sd = 3)
height_M <- rnorm(n_M, mean=130, sd = 3)
hist(c(height_F,height_M))
y <- c(rep(0,n_F), rep(1,n_M))
x <- c(height_F, height_M)
mod <- glm(y~x, family='binomial')
summary(mod)
mod$coefficients
intercept_mcar_record <- c()
coeff_mcar_record <- c()
intercept_mnar_record <- c()
coeff_mnar_record <- c()
for(j in 1:1000){
## sample MCAR
idx_mcar <- sample(n_F + n_M, size = (0.5+0.85)/2 * (n_F + n_M))
mod_mcar <- glm(y[idx_mcar]~x[idx_mcar], family='binomial')
mod_mcar$coefficients
intercept_mcar_record <-c(intercept_mcar_record,mod_mcar$coefficients[1])
coeff_mcar_record <-c(coeff_mcar_record,mod_mcar$coefficients[2])
## sample MNAR
idx_mnar_F <- sample(n_F , size = 0.5 *n_F)
idx_mnar_M <- sample(n_M , size = 0.85 *n_M)
y_F <- rep(0,n_F)[idx_mnar_F]
y_M <- rep(1,n_M)[idx_mnar_M]
x_F <- height_F[idx_mnar_F]
x_M <- height_M[idx_mnar_M]
y_mnar <- c(y_F, y_M)
x_mnar <- c(x_F, x_M)
mod_mnar <- glm(y_mnar~x_mnar, family='binomial')
intercept_mnar_record <- c(intercept_mnar_record,mod_mnar$coefficients[1])
coeff_mnar_record <-c(coeff_mnar_record,mod_mnar$coefficients[2])
}
mod$coefficients[1]
hist(intercept_mcar_record)
abline(v=mod$coefficients[1])
mean(intercept_mcar_record)
mod$coefficients[2]
hist(coeff_mcar_record)
abline(v=mod$coefficients[2])
mean(coeff_mcar_record)
##
mod$coefficients[1]
hist(intercept_mnar_record)
abline(v=mod$coefficients[1])
mean(intercept_mnar_record)
mod$coefficients[2]
hist(coeff_mnar_record)
mean(coeff_mnar_record)
## non-relational, typical LogReg setting
rm(list=ls())
n_F <- 10000
n_M <- 10000
height_F <- rnorm(n_F, mean = 120, sd = 3)
height_M <- rnorm(n_M, mean=130, sd = 3)
hist(c(height_F,height_M))
y <- c(rep(0,n_F), rep(1,n_M))
x <- c(height_F, height_M)
mod <- glm(y~x, family='binomial')
summary(mod)
mod$coefficients
intercept_mcar_record <- c()
coeff_mcar_record <- c()
intercept_mnar_record <- c()
coeff_mnar_record <- c()
for(j in 1:1000){
## sample MCAR
idx_mcar <- sample(n_F + n_M, size = (0.15+0.85)/2 * (n_F + n_M))
mod_mcar <- glm(y[idx_mcar]~x[idx_mcar], family='binomial')
mod_mcar$coefficients
intercept_mcar_record <-c(intercept_mcar_record,mod_mcar$coefficients[1])
coeff_mcar_record <-c(coeff_mcar_record,mod_mcar$coefficients[2])
## sample MNAR
idx_mnar_F <- sample(n_F , size = 0.15 *n_F)
idx_mnar_M <- sample(n_M , size = 0.85 *n_M)
y_F <- rep(0,n_F)[idx_mnar_F]
y_M <- rep(1,n_M)[idx_mnar_M]
x_F <- height_F[idx_mnar_F]
x_M <- height_M[idx_mnar_M]
y_mnar <- c(y_F, y_M)
x_mnar <- c(x_F, x_M)
mod_mnar <- glm(y_mnar~x_mnar, family='binomial')
intercept_mnar_record <- c(intercept_mnar_record,mod_mnar$coefficients[1])
coeff_mnar_record <-c(coeff_mnar_record,mod_mnar$coefficients[2])
}
mod$coefficients[1]
hist(intercept_mnar_record)
abline(v=mod$coefficients[1])
mean(intercept_mnar_record)
mod$coefficients[2]
hist(coeff_mnar_record)
mean(coeff_mnar_record)
## non-relational, typical LogReg setting
rm(list=ls())
n_F <- 10000
n_M <- 10000
height_F <- rnorm(n_F, mean = 120, sd = 3)
height_M <- rnorm(n_M, mean=130, sd = 3)
hist(c(height_F,height_M))
y <- c(rep(0,n_F), rep(1,n_M))
x <- c(height_F, height_M)
mod <- glm(y~x, family='binomial')
summary(mod)
mod$coefficients
intercept_mcar_record <- c()
coeff_mcar_record <- c()
intercept_mnar_record <- c()
coeff_mnar_record <- c()
for(j in 1:1000){
## sample MCAR
idx_mcar <- sample(n_F + n_M, size = (0.05+0.5)/2 * (n_F + n_M))
mod_mcar <- glm(y[idx_mcar]~x[idx_mcar], family='binomial')
mod_mcar$coefficients
intercept_mcar_record <-c(intercept_mcar_record,mod_mcar$coefficients[1])
coeff_mcar_record <-c(coeff_mcar_record,mod_mcar$coefficients[2])
## sample MNAR
idx_mnar_F <- sample(n_F , size = 0.05 *n_F)
idx_mnar_M <- sample(n_M , size = 0.5 *n_M)
y_F <- rep(0,n_F)[idx_mnar_F]
y_M <- rep(1,n_M)[idx_mnar_M]
x_F <- height_F[idx_mnar_F]
x_M <- height_M[idx_mnar_M]
y_mnar <- c(y_F, y_M)
x_mnar <- c(x_F, x_M)
mod_mnar <- glm(y_mnar~x_mnar, family='binomial')
intercept_mnar_record <- c(intercept_mnar_record,mod_mnar$coefficients[1])
coeff_mnar_record <-c(coeff_mnar_record,mod_mnar$coefficients[2])
}
##
mod$coefficients[1]
hist(intercept_mcar_record)
abline(v=mod$coefficients[1])
mean(intercept_mcar_record)
mod$coefficients[2]
hist(coeff_mcar_record)
abline(v=mod$coefficients[2])
mean(coeff_mcar_record)
mod$coefficients[1]
hist(intercept_mnar_record)
abline(v=mod$coefficients[1])
mean(intercept_mnar_record)
mod$coefficients[2]
hist(coeff_mnar_record)
mean(coeff_mnar_record)
mod$coefficients[2]
hist(coeff_mcar_record)
abline(v=mod$coefficients[2])
mean(coeff_mcar_record)
mod$coefficients[1]
hist(intercept_mcar_record)
abline(v=mod$coefficients[1])
mean(intercept_mcar_record)
mod$coefficients[1]
hist(intercept_mnar_record)
abline(v=mod$coefficients[1])
mean(intercept_mnar_record)
mod$coefficients[1]
hist(intercept_mcar_record)
abline(v=mod$coefficients[1])
mean(intercept_mcar_record)
mod$coefficients[2]
hist(coeff_mcar_record)
abline(v=mod$coefficients[2])
mean(coeff_mcar_record)
mod$coefficients[1]
hist(intercept_mnar_record)
abline(v=mod$coefficients[1])
mean(intercept_mnar_record)
mod$coefficients[2]
hist(coeff_mnar_record)
mean(coeff_mnar_record)
help(apply)
help("order")
11589-210
11310+210
11589-11529
11589-11520
210 + 10 + 2662 + 59+210+11310
210 + 10 + 2662 + 59+210+11310 - 2662 - 210
8242/2
rm(list=ls())
setwd('~/Dropbox/YelpBias/kristen_sandbox/final_paper_code/JITE_git_upload/Bias/code/b_PopeSydnor/2_KC_NY_analysis/')
## King County
kang_df1 <- read.csv('./output/Kang_output_additional_Features_meanSUP_1.csv')
kang_df2 <- read.csv('./output/Kang_output_additional_Features_meanSUP_2.csv')
kang_df3 <- read.csv('./output/Kang_output_additional_Features_meanSUP_3.csv')
kang_df4 <- read.csv('./output/Kang_output_additional_Features_meanSUP_4.csv')
kang_df <- rbind(kang_df1, kang_df2, kang_df3, kang_df4)
## Predictive Degradation
kang_df$restricted_minus_proposed_TEST <- kang_df$Restricted_RF_RMSE_test - kang_df$Proposed_RF_RMSE_test
kang_df$restricted_minus_proposed_TEST_OLS <- kang_df$Restricted_OLS_RMSE_test - kang_df$Proposed_OLS_RMSE_test
mean(kang_df$restricted_minus_proposed_TEST)
#1] -0.0165316
## New York
ny_df1 <- read.csv('./output/NYC_output_all_years_additional_features_meanSUP_1.csv')
ny_df2 <- read.csv('./output/NYC_output_all_years_additional_features_meanSUP_2.csv')
ny_df3 <- read.csv('./output/NYC_output_all_years_additional_features_meanSUP_3.csv')
ny_df4 <- read.csv('./output/NYC_output_all_years_additional_features_meanSUP_4.csv')
ny_df <- rbind(ny_df1, ny_df2, ny_df3, ny_df4)
## Predictive Degradation
ny_df$restricted_minus_proposed_TEST <- ny_df$Restricted_RF_RMSE_test - ny_df$Proposed_RF_RMSE_test
ny_df$restricted_minus_proposed_TEST_OLS <- ny_df$Restricted_OLS_RMSE_test - ny_df$Proposed_OLS_RMSE_test
mean(ny_df$restricted_minus_proposed_TEST)
#[1] 0.0029749
pdf("./figs/Kang_NY_Proposed_v_restricted.pdf", height=2.5,width=6)
layout(matrix(c(2,1,3,3), 2, 2, byrow = TRUE), widths = c(2,2), heights = c(1,0.25))
par(mar=c(1.2,3,1,1),mgp=c(1.5,0.5,0),tcl=-0.3)
hist(kang_df$restricted_minus_proposed_TEST, #pch = 16,
#xlim = c(1.804,1.835),
col = rgb(1,0,0,0.5),
breaks=seq(-0.088, 0.08, length.out=30),
#cex=1.5,
xaxt='n',
xlim = c(-0.09, 0.08),
xlab = '',
#ylab = '(restricted-RMSE - proposed-RMSE)',
freq = F, border = 'white',
main = 'King County')
abline(v=0,  lty=5)
axis(1, at=seq(-0.09, 0.08, by = 0.02),  lwd.ticks=1)
#axis(1, at=seq(0 , 2000, by=200), lwd=0, lwd.ticks=1)
#par(mar=c(3,3,1.5,1),mgp=c(1.5,0.5,0),tcl=-0.3)
par(mar=c(1.2,3,1,1),mgp=c(1.5,0.5,0),tcl=-0.3)
hist(ny_df$restricted_minus_proposed_TEST, #pch = 16,
#xlim = c(1.804,1.835),
col =rgb(0,0,1, 0.5),
breaks=seq(-0.03, 0.03, length.out=15),
#cex=1.5,
xlim = c(-0.09, 0.08),
xaxt = 'n',
# xlab = '',
xlab = '',##'Proposed Predictive Degradation',
freq = F, border = 'white', add =F,
main =  'New York')
axis(1, at=seq(-0.09, 0.08, by = 0.02),  lwd.ticks=1)
abline(v=0,  lty=5)
plot(0,0, bty = 'n', xaxt='n', yaxt='n', ylim = c(1,2), xlim = c(1,2), ylab = '', xlab = '')
text(1.5,1.5,'Predictive Degradation', cex=1.1)
dev.off()
cairo_ps("./figs/Kang_NY_Proposed_v_restricted.eps",family = 'Times', height=2.5,width=6,
fallback_resolution = 600)
layout(matrix(c(2,1,3,3), 2, 2, byrow = TRUE), widths = c(2,2), heights = c(1,0.25))
par(mar=c(1.2,3,1,1),mgp=c(1.5,0.5,0),tcl=-0.3)
hist(kang_df$restricted_minus_proposed_TEST, #pch = 16,
col = rgb(1,0,0,0.5),
breaks=seq(-0.088, 0.08, length.out=30),
xaxt='n',
xlim = c(-0.09, 0.08),
xlab = '',
freq = F, border = 'white',
main = 'b) King County',  font.main = 1)
abline(v=0,  lty=5)
axis(1, at=seq(-0.09, 0.08, by = 0.02),  lwd.ticks=1)
par(mar=c(1.2,3,1,1),mgp=c(1.5,0.5,0),tcl=-0.3)
hist(ny_df$restricted_minus_proposed_TEST, #pch = 16,
#xlim = c(1.804,1.835),
col =rgb(0,0,1, 0.5),
breaks=seq(-0.03, 0.03, length.out=15),
#cex=1.5,
xlim = c(-0.09, 0.08),
xaxt = 'n',
# xlab = '',
xlab = '',##'Proposed Predictive Degradation',
freq = F, border = 'white', add =F,
main =  'a) New York',  font.main = 1)
axis(1, at=seq(-0.09, 0.08, by = 0.02),  lwd.ticks=1)
abline(v=0,  lty=5)
plot(0,0, bty = 'n', xaxt='n', yaxt='n', ylim = c(1,2), xlim = c(1,2), ylab = '', xlab = '')
text(1.5,1.5,'Predictive degradation', cex=1.1)
dev.off()
pdf("./figs/Kang_NY_RF_v_OLS.pdf", height=5,width=5)
cex_pt <- 0.5
par(mfrow=c(2,2),mar=c(3,3,2,1),mgp=c(1.5,0.5,0),tcl=-0.3)
## NYC
par(mar=c(3,3,2,1),mgp=c(1.5,0.5,0),tcl=-0.3)
plot(ny_df$Proposed_OLS_RMSE_test ,
ny_df$Proposed_RF_RMSE_test ,
xlab = 'Linear',
ylab = 'RF',
main = 'Proposed (New York)',
pch =  20,
cex = cex_pt,
col=rgb(0,0,0,0.4),
xlim = c(10.8,12.2),
ylim = c(10.8,12.2))
abline(a=0,b=1)
par(mar=c(3,2.5,2,1),mgp=c(1.5,0.5,0),tcl=-0.3)
plot(ny_df$Restricted_OLS_RMSE_test ,
ny_df$Restricted_RF_RMSE_test ,
xlab = 'Linear',
ylab = 'RF',
main = 'Restricted (New York)',
cex = cex_pt,
pch =  20,
col=rgb(0,0,0,0.4),
xlim = c(10.8,12.2),
ylim = c(10.8,12.2))
abline(a=0,b=1)
plot(kang_df$Proposed_OLS_RMSE_test ,
kang_df$Proposed_RF_RMSE_test ,
xlab = 'Linear',
ylab = 'RF',
main = 'Proposed (King County)',
pch = 20, cex = cex_pt,
col=rgb(0,0,0,0.4),
xlim = c(13.25,15.5),
ylim = c(13.25,15.5))
abline(a=0,b=1)
par(mar=c(3,2.5,2,1),mgp=c(1.5,0.5,0),tcl=-0.3)
plot(kang_df$Restricted_OLS_RMSE_test ,
kang_df$Restricted_RF_RMSE_test ,
xlab = 'Linear',
ylab = 'RF',
cex = cex_pt,
main = 'Restricted (King County)',
pch =  20,
col=rgb(0,0,0,0.4),
xlim = c(13.25,15.5),
ylim = c(13.25,15.5))
abline(a=0,b=1)
dev.off()
## eps version
cairo_ps("./figs/Kang_NY_RF_v_OLS.eps",family = 'Times', height=5,width=5,
fallback_resolution = 600)
cex_pt <- 0.5
par(mfrow=c(2,2),mar=c(3,3,2,1),mgp=c(1.5,0.5,0),tcl=-0.3)
## NYC
par(mar=c(3,3,2,1),mgp=c(1.5,0.5,0),tcl=-0.3)
plot(ny_df$Proposed_OLS_RMSE_test ,
ny_df$Proposed_RF_RMSE_test ,
xlab = 'Linear',
ylab = 'RF',
main = 'a) Proposed (New York)',font.main=1,
pch =  20,
cex = cex_pt,
col=rgb(0,0,0,0.4),
xlim = c(10.8,12.2),
ylim = c(10.8,12.2))
abline(a=0,b=1)
par(mar=c(3,2.5,2,1),mgp=c(1.5,0.5,0),tcl=-0.3)
plot(ny_df$Restricted_OLS_RMSE_test ,
ny_df$Restricted_RF_RMSE_test ,
xlab = 'Linear',
ylab = 'RF',
main = 'b) Restricted (New York)',font.main=1,
cex = cex_pt,
pch =  20,
col=rgb(0,0,0,0.4),
xlim = c(10.8,12.2),
ylim = c(10.8,12.2))
abline(a=0,b=1)
plot(kang_df$Proposed_OLS_RMSE_test ,
kang_df$Proposed_RF_RMSE_test ,
xlab = 'Linear',
ylab = 'c) RF',
main = 'Proposed (King County)',
pch = 20, cex = cex_pt,font.main=1,
col=rgb(0,0,0,0.4),
xlim = c(13.25,15.5),
ylim = c(13.25,15.5))
abline(a=0,b=1)
par(mar=c(3,2.5,2,1),mgp=c(1.5,0.5,0),tcl=-0.3)
plot(kang_df$Restricted_OLS_RMSE_test ,
kang_df$Restricted_RF_RMSE_test ,
xlab = 'Linear',
ylab = 'RF',
cex = cex_pt,
main = 'd) Restricted (King County)', font.main=1,
pch =  20,
col=rgb(0,0,0,0.4),
xlim = c(13.25,15.5),
ylim = c(13.25,15.5))
abline(a=0,b=1)
dev.off()
